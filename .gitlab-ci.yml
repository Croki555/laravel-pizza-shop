stages:
  - build
  - test

variables:
  APP_PORT: 80
  DB_DATABASE: laravel
  DB_USERNAME: sail
  DB_PASSWORD: secret
  REDIS_PORT: 6379
  RABBITMQ_USER: sail
  RABBITMQ_PASSWORD: password
  WWWUSER: 1000

image: docker:24.0
services:
  - docker:dind

before_script:
  - apk add --no-cache bash postgresql-client docker-compose git

build:
  stage: build
  script:
    - echo "Собираем Docker-контейнеры..."
    - docker-compose build
    - echo "Build завершен."

test:
  stage: test
  script:
    - echo "Запускаем контейнеры в фоновом режиме..."
    - docker-compose up -d

    # Даем время контейнерам инициализироваться
    - sleep 20

    # Исправляем права доступа внутри контейнера (от имени root)
    - docker-compose exec -T --user root pizza.shop chown -R www:www /var/www/html

    # Добавляем доверие к репозиторию git, чтобы избежать ошибок ownership
    - docker-compose exec -T --user www pizza.shop git config --global --add safe.directory /var/www/html

    # Установка зависимостей Composer (от имени пользователя www)
    - echo "Устанавливаем зависимости Composer..."
    - docker-compose exec -T --user www pizza.shop composer install --no-interaction --prefer-dist

    # Копируем файл окружения и генерируем ключ (от имени www)
    - docker-compose exec -T --user www pizza.shop cp .env.example .env
    - docker-compose exec -T --user www pizza.shop php artisan key:generate

    # Миграции и сидеры (от имени www)
    - echo "Запускаем миграции и сидеры..."
    - docker-compose exec -T --user www pizza.shop php artisan migrate:fresh --seed --force

    # Создаем тестовую базу данных (от имени postgres внутри контейнера pgsql)
    # Предполагается, что переменные окружения для PostgreSQL заданы правильно.
    - echo "Создаем тестовую БД..."
    - docker-compose exec -T pgsql sh -c 'psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "CREATE DATABASE testing;"'

    # Запуск тестов Laravel (от имени www)
    - echo "Запускаем тесты Laravel..."
    - docker-compose exec -T --user www pizza.shop php artisan test

    # Проверка кода через PHPStan (от имени www)
    - echo "Проверяем код через PHPStan..."
    - docker-compose exec -T --user www pizza.shop ./vendor/bin/phpstan analyse --level=8

  after_script:
    - echo "Останавливаем контейнеры..."
    - docker-compose down
